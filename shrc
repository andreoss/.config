#!/bin/sh
# -*- mode: sh -*-
# -*- encoding: ansi -*-

umask 077
unalias -a

if [ "${LANG}x" = "x" ]; then
    LC_ALL=en_US.UTF-8
    LANG=en
    export LC_ALL LANG
fi

if [ "${USER:-}" != "root" ]; then
    # shellcheck disable=SC3045,SC3028
    case "${OSTYPE:-$(uname)}" in
        linux-gnu* | Linux)
            ulimit -u 10240
            ulimit -n 16384
            ulimit -c unlimited
            ulimit -Sn unlimited && ulimit -Sl unlimited
            ;;
    esac
fi

# shellcheck disable=SC3044
if [ "$BASH" ]; then
    shopt -s autocd
    shopt -s histappend
    shopt -s cmdhist
fi

stty werase undef

__debug=
__source() {
    # shellcheck disable=SC1090
    if [ -f "$1" ]; then . "$1"; fi
}
__warn() {
    if [ "$BASH" ]; then
        # shellcheck disable=SC3054
        # shellcheck disable=SC3028
        echo "${BASH_SOURCE[0]}:${BASH_LINENO[1]}: $*"
    else
        echo "warn: $*"
    fi
}
__complain() {
    __is_debug() { [ "${__debug}x" != "x" ]; }
    __is_debug && __warn "$*"
}
__define_dir() {
    dir="$1"
    val="$2"
    if [ ! -d "$val" ]; then
        __complain "$dir defined to $val which not found"
    fi
    eval "$dir=$val"
}
__prepend_path() {
    if [ -d "$1" ]; then
        PATH="$1:$PATH"
    else
        __complain "$1 not found"
    fi
}
__append_path() {
    if [ -d "$1" ]; then
        PATH="$1:$PATH"
    else
        __complain "$1 not found"
    fi
}
is_there() {
    which "$@" >/dev/null 2>&1
}

__prepend_path "$HOME/.local/bin"

if ! is_there sudo && is_there doas; then
    alias sudo=doas
fi
alias sudo="sudo "

if ! is_there docker && is_there podman; then
    alias docker=podman
fi

if ! is_there vi && is_there elvis; then
    alias vi=elvis
fi

alias e='emacsclient'

if mv --version 2>&1 | grep GNU >/dev/null; then
    for command in chmod chown mkdir rm rmdir ln cp mv; do
        # shellcheck disable=SC2139
        alias "$command=${command} --verbose"
    done
    alias ls='ls -1 -F -Q --quoting-style=shell'
    alias unxz='unxz -v'
else
    alias ls='ls -1 -F'
fi
# shellcheck disable=SC2142
{
    alias _1="awk '{print \$1}'"
    alias _2="awk '{print \$2}'"
    alias _3="awk '{print \$3}'"
}

CDPATH=".:$HOME:$HOME/src:$HOME/work:$HOME"
export CDPATH
alias less='less -R'
alias more=less
alias lc='ls | column'
alias cd..='cd ..'
alias cd...='cd ../..'
alias cd-='cd -'
alias -- ..='cd..'
alias -- ...='cd...'
alias -- -='cd '
alias -- .!='cd `git root`'
alias l=ls
alias sl=ls
alias la='ls -laht'
alias ll='ls -l'
alias lh='ls -asht'
alias cx='chmod +x'
alias what='command -v'
alias rsync='rsync --progress'
alias mc='mc --nocolor'
alias xc='xclip -o | tee /dev/stderr | xclip -i -selection clipboard'
alias q=exit
alias j=jobs
alias h='fc -l'
alias wget='wget -U -c'
alias bc='bc -q'
alias ssh='ssh -Y'
alias ngrep='grep -n'
alias igrep='grep -i'
alias lstcp='sudo lsof -i TCP -P'
alias make='time make'
alias g=git
alias gs='git status'
alias gc='git commit'
alias p=perl6
alias nm=notmuch
alias iec='numfmt --to=iec'
alias du='__du'
alias dmesg='dmesg --human'
alias acpi='acpi -a -t -b'
alias ping='ping -c 4'
alias watch='watch -n 0.2'
__du() {
    \du --bytes --summarize "$@" \
        | sort --reverse --numeric-sort \
        | numfmt --to=iec
}

__short_pwd() {
    DIR=
    if [ -z "${INSIDE_EMACS-}" ]; then
        case "$PWD" in
            "$HOME")
                DIR=
                ;;
            $HOME/*)
                DIR=${PWD##"$HOME/"}
                ;;
            *)
                DIR="$PWD"
                ;;
        esac
    fi
    printf '%s' "$DIR"
}
__git_work_tree() {
    git rev-parse --is-inside-work-tree 2>/dev/null >/dev/null
}
__git_branch() {
    if git show-ref --verify --quiet HEAD; then
        git rev-parse --symbolic-full-name --abbrev-ref HEAD
    else
        echo "(empty)"
    fi
}
__vcs_status() {
    if __git_work_tree; then
        printf '%s' "$(__git_branch)"
    fi
}

__ps1_short() {
    if [ "${USER:-}" = "root" ]; then
        PROMPT='# '
    else
        PROMPT="${PROMPT:-* }"
    fi
    printf '%s' "$PROMPT"
}

__ps1() {
    if [ "${USER:-}" = "root" ]; then
        PROMPT='# '
    else
        PROMPT="${PROMPT:-* }"
    fi
    DIR="$(__short_pwd)"

    if [ "$DIR" ]; then
        VCS="$(__vcs_status)"
        printf '%s %s %s\n%s' "$VCS" "$DIR" "${IN_NIX_SHELL-}" "$PROMPT"
    else
        printf '%s' "$PROMPT"
    fi
}

export PATH
PROMPT_COMMAND="history -a"

set -o vi
if [ "$BASH" ]
then
    if [ "${TMUX:-}" ]
    then
       PS1='$(__ps1_short)'
    else
       PS1='$(__ps1)'
    fi
fi

# shellcheck disable=SC3037,SC3028
__title() {
    DIR="$(__short_pwd)"
    DIR="${DIR:-~}"
    COMMAND="$BASH_COMMAND"
    VCS="$(__vcs_status)"
    case "$COMMAND" in
        history* | autojump*)
            COMMAND=""
            ;;
    esac
    if [ "$COMMAND" ]; then
        echo -ne "\e]0;${VCS} ${DIR}: ${COMMAND}\007"
    else
        echo -ne "\e]0;${VCS} ${DIR}\007"
    fi
}
__prepend_path "$HOME/.scripts"
__prepend_path "$HOME/.cargo/bin"
case "$TERM" in
    dumb) PAGER="cat" ;;
    *) PAGER="less" ;;
esac
export PAGER

jdk() {
    JDK=
    case "${1:----}" in
        graal)
            JDK=GRAALVM_"${2:?no second arg}"
            ;;
        [0-9]*)
            JDK=JDK_"$1"
            ;;
        ---)
            if [ "$JAVA_HOME" ]; then
                "$JAVA_HOME"/bin/java -version
            else
                __warn "not defined: JAVA_HOME"
                if command -v java; then
                    java -version
                fi
            fi
            return
            ;;
        *)
            __warn "not suppored $*"
            return
            ;;
    esac
    if eval "[ \"x\$$JDK\" == \"x\" ]"; then
        __warn "not defined $JDK"
        return
    fi
    if [ ! -d "$(eval "echo \${$JDK}")" ]; then
        __warn "not exists $JDK"
        return
    fi
    eval "export JAVA_HOME=\$$JDK"
    jdk ""
    PATH="$JAVA_HOME/bin:$PATH"
    exec "$SHELL"
}

__source "$HOME/.config/shrc-private"
__source "$HOME/.nix-profile/etc/profile.d/nix.sh"
__source "$HOME/.nix-profile/etc/profile.d/autojump.sh"
__source "$HOME/.nix-profile/etc/profile.d/hm-session-vars.sh"
__source "$HOME/.nix-profile/etc/bash_completion.d/git-prompt.sh"
__source "/usr/local/share/bash-completion/bash_completion"

if [ -d "$HOME/perl5" ] && is_there "perl"
then
    eval "$(perl -I ~/perl5/lib/perl5/ -Mlocal::lib)"
fi

# shellcheck disable=SC3047
if [ "$BASH" ]; then
    case "$TERM" in
        xterm* | rxvt* | tmux* | screen*)
            trap '__title' DEBUG
            ;;
    esac
fi
