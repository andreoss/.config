diff --git a/grub-core/disk/luks.c b/grub-core/disk/luks.c
index 250202947..4149e5b7a 100644
--- a/grub-core/disk/luks.c
+++ b/grub-core/disk/luks.c
@@ -308,13 +308,11 @@ luks_recover_key (grub_disk_t source,
   grub_size_t length;
   grub_err_t err;
   grub_size_t max_stripes = 1;
-  char *tmp;
 
   err = grub_disk_read (source, 0, 0, sizeof (header), &header);
   if (err)
     return err;
 
-  grub_puts_ (N_("Attempting to decrypt master key..."));
   keysize = grub_be_to_cpu32 (header.keyBytes);
   if (keysize > GRUB_CRYPTODISK_MAX_KEYLEN)
     return grub_error (GRUB_ERR_BAD_FS, "key is too long");
@@ -329,13 +327,7 @@ luks_recover_key (grub_disk_t source,
     return grub_errno;
 
   /* Get the passphrase from the user.  */
-  tmp = NULL;
-  if (source->partition)
-    tmp = grub_partition_get_name (source->partition);
-  grub_printf_ (N_("Enter passphrase for %s%s%s (%s): "), source->name,
-	       source->partition ? "," : "", tmp ? : "",
-	       dev->uuid);
-  grub_free (tmp);
+  grub_printf_ (N_("Enter passphrase: "));
   if (!grub_password_get (passphrase, MAX_PASSPHRASE))
     {
       grub_free (split_key);
@@ -434,10 +426,6 @@ luks_recover_key (grub_disk_t source,
 	  continue;
 	}
 
-      /* TRANSLATORS: It's a cryptographic key slot: one element of an array
-	 where each element is either empty or holds a key.  */
-      grub_printf_ (N_("Slot %d opened\n"), i);
-
       /* Set the master key.  */
       gcry_err = grub_cryptodisk_setkey (dev, candidate_key, keysize); 
       if (gcry_err)
